default:
  image: python:3.9.1

stages:
  - pre_deploy_testing
  - deploy
  - post_deploy_testing
  #- reporting_post_deploy

before_script:
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install faraday-cli

Run_Bandit:
  stage: pre_deploy_testing
  tags:
    - digitalocean-dev
  script:
    - bandit -r . -f xml -o flaskapp_faraday_bandit.xml || true
    - cat flaskapp_faraday_bandit.xml
    - if [[ $(grep -c testcase flaskapp_faraday_bandit.xml) -gt 0 ]]; then (faraday-cli auth -f $FARADAY_URL -u $FARADAY_USER -p $FARADAY_PASSWORD && faraday-cli tool report flaskapp_faraday_bandit.xml -w $DEVSECOPS_WORKSPACE --vuln-tag "$CI_PROJECT_NAME" --vuln-tag "$CI_COMMIT_REF_NAME"); else (echo 'Bandit - no vulns dettected' && exit 0); fi
  rules:
    - allow_failure: true

Push_to_Heroku:
 stage: deploy
 tags:
   - digitalocean-dev
 script:
   - git remote remove heroku
   - git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git
   - git push heroku HEAD:master -f

Run_Zap:
 stage: post_deploy_testing
 tags: 
   - digitalocean-dev
 image: owasp/zap2docker-stable
 script:
   - mkdir /zap/wrk/
   - cp -r * /zap/wrk/
   - zap-baseline.py -t $ZAP_SCAN_URL -x zap-report.xml || echo 0
   - cp /zap/wrk/zap-report.xml .
   - cat /zap/wrk/zap-report.xml
   - faraday-cli auth -f $FARADAY_URL -u $FARADAY_USER -p $FARADAY_PASSWORD && faraday-cli tool report zap-report.xml -w $DEVSECOPS_WORKSPACE --vuln-tag "$CI_PROJECT_NAME" --vuln-tag "$CI_COMMIT_REF_NAME"
 artifacts:
   paths: 
     - zap-report.xml

# Zap_Reporting:
#  stage: reporting_post_deploy
#  tags:
#    - digitalocean-dev
#  script:
#   - if [[ $(grep -c testcase zap-report.xml) -gt 0 ]]; then (faraday-cli auth -f $FARADAY_URL -u $FARADAY_USER -p $FARADAY_PASSWORD && faraday-cli tool report zap-report.xml -w $DEVSECOPS_WORKSPACE --vuln-tag "$CI_PROJECT_NAME" --vuln-tag "$CI_COMMIT_REF_NAME"); else (echo 'Zap - no vulns dettected' && exit 0); fi
#  needs:
#    - job: Run_Zap
#      artifacts: true
#  rules:
#    - when: on_success
